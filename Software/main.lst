   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.startup,"ax",@progbits
  11               	.global	main
  13               	main:
  14               	.LFB9:
  15               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #include<avr/interrupt.h>
   4:main.c        **** #include <avr/sleep.h>
   5:main.c        **** #include <avr/power.h>
   6:main.c        **** 
   7:main.c        **** #define ALL 0
   8:main.c        **** #define PIXIE 1
   9:main.c        **** #define SCROLL 2
  10:main.c        **** #define DEBUG 3
  11:main.c        **** #define NB_MODES 4
  12:main.c        **** 
  13:main.c        **** #define TOUCH_FLAG 0
  14:main.c        **** //#define ADC_FLAG 1
  15:main.c        **** #define DEBUG_FLAG 2
  16:main.c        **** #define DIR_FLAG 2
  17:main.c        **** 
  18:main.c        **** volatile uint8_t cnt=1;
  19:main.c        **** volatile uint8_t level[12];
  20:main.c        **** //uint8_t level[12] = {1, 1, 3, 7, 15, 31, 63, 31, 15, 7, 3, 1 }; //Brightness levels of each led.
  21:main.c        **** //uint8_t order[12] = {0,11,9,4,2,10,7,6,3,1,8,5};//Reverse
  22:main.c        **** const uint8_t order[12] = {3,8,2,7,9,4,5,1,0,6,11,10};//Right
  23:main.c        **** volatile uint8_t blinkMode = ALL;
  24:main.c        **** volatile uint8_t pstate=0;
  25:main.c        **** /*
  26:main.c        **** static	long	randx;
  27:main.c        **** static	char	randf;
  28:main.c        **** 
  29:main.c        **** void srand(unsigned x){
  30:main.c        **** 	randx = x;
  31:main.c        **** 	randf = 1;
  32:main.c        **** }
  33:main.c        **** 
  34:main.c        **** int rand(void){
  35:main.c        **** 	if(!randf)srand(1);
  36:main.c        **** 	return((int)((randx = randx*1103515245L + 12345)>>16) & 077777);
  37:main.c        **** }
  38:main.c        **** */
  39:main.c        **** volatile uint8_t brightness=5;
  40:main.c        **** volatile uint8_t speed=15;
  41:main.c        **** volatile uint8_t index=1;
  42:main.c        **** 
  43:main.c        **** 
  44:main.c        **** int main(void){
  16               		.loc 1 44 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  45:main.c        ****       
  46:main.c        ****     //Timer1 for LED charlieplexing
  47:main.c        ****     TCCR1=(1<<CTC1)|(1<<CS12)|(1<<CS10);//|(1<<CS11);        //Divide clock by 1, was 2<<CS10
  22               		.loc 1 47 0
  23 0000 85E8      		ldi r24,lo8(-123)
  24 0002 80BF      		out 0x30,r24
  48:main.c        ****     GTCCR=0;                          //No PWM
  25               		.loc 1 48 0
  26 0004 1CBC      		out 0x2c,__zero_reg__
  49:main.c        ****     OCR1A=0;                          //No PWM
  27               		.loc 1 49 0
  28 0006 1EBC      		out 0x2e,__zero_reg__
  50:main.c        ****     OCR1C=250-1;                      //16kHz for good POV (16k/64/12=20Hz)
  29               		.loc 1 50 0
  30 0008 89EF      		ldi r24,lo8(-7)
  31 000a 8DBD      		out 0x2d,r24
  51:main.c        ****     TIMSK|=(1<<OCIE1A);                 //Compare Match A interrupt
  32               		.loc 1 51 0
  33 000c 89B7      		in r24,0x39
  34 000e 8064      		ori r24,lo8(64)
  35 0010 89BF      		out 0x39,r24
  52:main.c        ****     /*
  53:main.c        ****     TCCR0A=(1<<WGM01);
  54:main.c        ****     OCR0A=255;
  55:main.c        ****     TCCR0B=(1<<CS02)|(1<<CS00);
  56:main.c        ****     TIMSK|=(1<<OCIE0A);
  57:main.c        ****     */
  58:main.c        ****     /*
  59:main.c        ****     ADMUX=(1<<MUX3)|(1<<MUX2);
  60:main.c        ****     ADCSRA |= (1<<ADEN) | (1<<ADIE);
  61:main.c        ****     */
  62:main.c        ****     PCMSK|=(1<<PCINT4);
  36               		.loc 1 62 0
  37 0012 AC9A      		sbi 0x15,4
  63:main.c        ****     GIMSK|=(1<<PCIE);
  38               		.loc 1 63 0
  39 0014 8BB7      		in r24,0x3b
  40 0016 8062      		ori r24,lo8(32)
  41 0018 8BBF      		out 0x3b,r24
  64:main.c        ****     
  65:main.c        ****     ADCSRA&=~(1<<ADEN);
  42               		.loc 1 65 0
  43 001a 3798      		cbi 0x6,7
  66:main.c        ****     power_adc_disable();
  44               		.loc 1 66 0
  45 001c 80B5      		in r24,0x20
  46 001e 8160      		ori r24,lo8(1)
  47 0020 80BD      		out 0x20,r24
  67:main.c        ****     power_timer0_disable();
  48               		.loc 1 67 0
  49 0022 80B5      		in r24,0x20
  50 0024 8460      		ori r24,lo8(4)
  51 0026 80BD      		out 0x20,r24
  68:main.c        ****     power_usi_disable();
  52               		.loc 1 68 0
  53 0028 80B5      		in r24,0x20
  54 002a 8260      		ori r24,lo8(2)
  55 002c 80BD      		out 0x20,r24
  69:main.c        ****     
  70:main.c        ****     sei();                              //Enable interrupts
  56               		.loc 1 70 0
  57               	/* #APP */
  58               	 ;  70 "main.c" 1
  59 002e 7894      		sei
  60               	 ;  0 "" 2
  61               	/* #NOAPP */
  62               	.L2:
  71:main.c        ****     while(1){
  72:main.c        ****         
  73:main.c        ****         set_sleep_mode(SLEEP_MODE_IDLE);
  63               		.loc 1 73 0 discriminator 1
  64 0030 85B7      		in r24,0x35
  65 0032 877E      		andi r24,lo8(-25)
  66 0034 85BF      		out 0x35,r24
  74:main.c        ****         sleep_mode();
  67               		.loc 1 74 0 discriminator 1
  68 0036 85B7      		in r24,0x35
  69 0038 8062      		ori r24,lo8(32)
  70 003a 85BF      		out 0x35,r24
  71               	/* #APP */
  72               	 ;  74 "main.c" 1
  73 003c 8895      		sleep
  74               		
  75               	 ;  0 "" 2
  76               	/* #NOAPP */
  77 003e 85B7      		in r24,0x35
  78 0040 8F7D      		andi r24,lo8(-33)
  79 0042 85BF      		out 0x35,r24
  80 0044 00C0      		rjmp .L2
  81               		.cfi_endproc
  82               	.LFE9:
  84               		.text
  85               	.global	__vector_2
  87               	__vector_2:
  88               	.LFB10:
  75:main.c        **** /*
  76:main.c        ****         if(pstate&(1<<ADC_FLAG)){
  77:main.c        ****             pstate&=~(1<<ADC_FLAG);   
  78:main.c        ****             ADCSRA |= (1<<ADSC);
  79:main.c        ****         }*/
  80:main.c        **** 
  81:main.c        ****     }
  82:main.c        ****     return 0;
  83:main.c        **** }     
  84:main.c        **** /*
  85:main.c        **** ISR(ADC_vect){
  86:main.c        ****     uint16_t res=ADCL;
  87:main.c        ****     res|=(ADCH<<8);
  88:main.c        ****     blinkMode=2753/res-3;   //Vcc=1024*1.1/ADC
  89:main.c        **** }*/
  90:main.c        **** /*
  91:main.c        **** ISR(TIM0_COMPA_vect) {
  92:main.c        ****     
  93:main.c        **** }*/
  94:main.c        **** ISR(PCINT0_vect){
  89               		.loc 1 94 0
  90               		.cfi_startproc
  91 0000 1F92      		push r1
  92               	.LCFI0:
  93               		.cfi_def_cfa_offset 3
  94               		.cfi_offset 1, -2
  95 0002 0F92      		push r0
  96               	.LCFI1:
  97               		.cfi_def_cfa_offset 4
  98               		.cfi_offset 0, -3
  99 0004 0FB6      		in r0,__SREG__
 100 0006 0F92      		push r0
 101 0008 1124      		clr __zero_reg__
 102 000a 8F93      		push r24
 103               	.LCFI2:
 104               		.cfi_def_cfa_offset 5
 105               		.cfi_offset 24, -4
 106 000c 9F93      		push r25
 107               	.LCFI3:
 108               		.cfi_def_cfa_offset 6
 109               		.cfi_offset 25, -5
 110 000e EF93      		push r30
 111               	.LCFI4:
 112               		.cfi_def_cfa_offset 7
 113               		.cfi_offset 30, -6
 114 0010 FF93      		push r31
 115               	.LCFI5:
 116               		.cfi_def_cfa_offset 8
 117               		.cfi_offset 31, -7
 118               	/* prologue: Signal */
 119               	/* frame size = 0 */
 120               	/* stack size = 7 */
 121               	.L__stack_usage = 7
  95:main.c        ****     if((PINB&(1<<PINB4)) && (pstate&(1<<TOUCH_FLAG))){
 122               		.loc 1 95 0
 123 0012 B49B      		sbis 0x16,4
 124 0014 00C0      		rjmp .L5
 125               		.loc 1 95 0 is_stmt 0 discriminator 1
 126 0016 8091 0000 		lds r24,pstate
 127 001a 80FF      		sbrs r24,0
 128 001c 00C0      		rjmp .L5
  96:main.c        ****         pstate&=~(1<<TOUCH_FLAG);   
 129               		.loc 1 96 0 is_stmt 1
 130 001e 8091 0000 		lds r24,pstate
 131 0022 8E7F      		andi r24,lo8(-2)
 132 0024 8093 0000 		sts pstate,r24
  97:main.c        ****         blinkMode++;
 133               		.loc 1 97 0
 134 0028 8091 0000 		lds r24,blinkMode
 135 002c 8F5F      		subi r24,lo8(-(1))
 136 002e 8093 0000 		sts blinkMode,r24
  98:main.c        ****         if(blinkMode>=NB_MODES)blinkMode=0;
 137               		.loc 1 98 0
 138 0032 8091 0000 		lds r24,blinkMode
 139 0036 8430      		cpi r24,lo8(4)
 140 0038 00F0      		brlo .L6
 141               		.loc 1 98 0 is_stmt 0 discriminator 1
 142 003a 1092 0000 		sts blinkMode,__zero_reg__
 143               	.L6:
  99:main.c        ****         brightness=0;
 144               		.loc 1 99 0 is_stmt 1
 145 003e 1092 0000 		sts brightness,__zero_reg__
 100:main.c        ****         pstate|=(1<<DIR_FLAG);
 146               		.loc 1 100 0
 147 0042 8091 0000 		lds r24,pstate
 148 0046 8460      		ori r24,lo8(4)
 149 0048 8093 0000 		sts pstate,r24
 101:main.c        ****         index=0;
 150               		.loc 1 101 0
 151 004c 1092 0000 		sts index,__zero_reg__
 152               	.LVL0:
 153 0050 80E0      		ldi r24,0
 154 0052 90E0      		ldi r25,0
 155               	.LVL1:
 156               	.L7:
 157               	.LBB2:
 102:main.c        ****         for(uint8_t i=0;i<12;i++){
 103:main.c        ****             level[i]=0;
 158               		.loc 1 103 0 discriminator 3
 159 0054 FC01      		movw r30,r24
 160 0056 E050      		subi r30,lo8(-(level))
 161 0058 F040      		sbci r31,hi8(-(level))
 162 005a 1082      		st Z,__zero_reg__
 163               	.LVL2:
 164 005c 0196      		adiw r24,1
 165               	.LVL3:
 102:main.c        ****         for(uint8_t i=0;i<12;i++){
 166               		.loc 1 102 0 discriminator 3
 167 005e 8C30      		cpi r24,12
 168 0060 9105      		cpc r25,__zero_reg__
 169 0062 01F4      		brne .L7
 170 0064 00C0      		rjmp .L4
 171               	.LVL4:
 172               	.L5:
 173               	.LBE2:
 104:main.c        ****         }
 105:main.c        ****     }else if(!(PINB&(1<<PINB4)) && !(pstate&(1<<TOUCH_FLAG))){
 174               		.loc 1 105 0
 175 0066 B499      		sbic 0x16,4
 176 0068 00C0      		rjmp .L4
 177               		.loc 1 105 0 is_stmt 0 discriminator 1
 178 006a 8091 0000 		lds r24,pstate
 179 006e 80FD      		sbrc r24,0
 180 0070 00C0      		rjmp .L4
 106:main.c        ****         pstate|=(1<<TOUCH_FLAG);            
 181               		.loc 1 106 0 is_stmt 1
 182 0072 8091 0000 		lds r24,pstate
 183 0076 8160      		ori r24,lo8(1)
 184 0078 8093 0000 		sts pstate,r24
 185               	.L4:
 186               	/* epilogue start */
 107:main.c        ****     }
 108:main.c        **** }
 187               		.loc 1 108 0
 188 007c FF91      		pop r31
 189 007e EF91      		pop r30
 190 0080 9F91      		pop r25
 191 0082 8F91      		pop r24
 192 0084 0F90      		pop r0
 193 0086 0FBE      		out __SREG__,r0
 194 0088 0F90      		pop r0
 195 008a 1F90      		pop r1
 196 008c 1895      		reti
 197               		.cfi_endproc
 198               	.LFE10:
 200               	.global	__vector_3
 202               	__vector_3:
 203               	.LFB11:
 109:main.c        **** 
 110:main.c        **** 
 111:main.c        **** ISR(TIM1_COMPA_vect) {
 204               		.loc 1 111 0
 205               		.cfi_startproc
 206 008e 1F92      		push r1
 207               	.LCFI6:
 208               		.cfi_def_cfa_offset 3
 209               		.cfi_offset 1, -2
 210 0090 0F92      		push r0
 211               	.LCFI7:
 212               		.cfi_def_cfa_offset 4
 213               		.cfi_offset 0, -3
 214 0092 0FB6      		in r0,__SREG__
 215 0094 0F92      		push r0
 216 0096 1124      		clr __zero_reg__
 217 0098 2F93      		push r18
 218               	.LCFI8:
 219               		.cfi_def_cfa_offset 5
 220               		.cfi_offset 18, -4
 221 009a 3F93      		push r19
 222               	.LCFI9:
 223               		.cfi_def_cfa_offset 6
 224               		.cfi_offset 19, -5
 225 009c 4F93      		push r20
 226               	.LCFI10:
 227               		.cfi_def_cfa_offset 7
 228               		.cfi_offset 20, -6
 229 009e 5F93      		push r21
 230               	.LCFI11:
 231               		.cfi_def_cfa_offset 8
 232               		.cfi_offset 21, -7
 233 00a0 6F93      		push r22
 234               	.LCFI12:
 235               		.cfi_def_cfa_offset 9
 236               		.cfi_offset 22, -8
 237 00a2 7F93      		push r23
 238               	.LCFI13:
 239               		.cfi_def_cfa_offset 10
 240               		.cfi_offset 23, -9
 241 00a4 8F93      		push r24
 242               	.LCFI14:
 243               		.cfi_def_cfa_offset 11
 244               		.cfi_offset 24, -10
 245 00a6 9F93      		push r25
 246               	.LCFI15:
 247               		.cfi_def_cfa_offset 12
 248               		.cfi_offset 25, -11
 249 00a8 EF93      		push r30
 250               	.LCFI16:
 251               		.cfi_def_cfa_offset 13
 252               		.cfi_offset 30, -12
 253 00aa FF93      		push r31
 254               	.LCFI17:
 255               		.cfi_def_cfa_offset 14
 256               		.cfi_offset 31, -13
 257               	/* prologue: Signal */
 258               	/* frame size = 0 */
 259               	/* stack size = 13 */
 260               	.L__stack_usage = 13
 112:main.c        ****     static uint8_t first, ramp, column, bits, colbit;
 113:main.c        ****     ramp = (ramp+1) & 0x07;
 261               		.loc 1 113 0
 262 00ac 9091 0000 		lds r25,ramp.1644
 263 00b0 9F5F      		subi r25,lo8(-(1))
 264 00b2 9770      		andi r25,lo8(7)
 265 00b4 9093 0000 		sts ramp.1644,r25
 114:main.c        ****     if (ramp == 0) {
 266               		.loc 1 114 0
 267 00b8 9111      		cpse r25,__zero_reg__
 268 00ba 00C0      		rjmp .L18
 115:main.c        ****         bits = 0x07;
 269               		.loc 1 115 0
 270 00bc 87E0      		ldi r24,lo8(7)
 271 00be 8093 0000 		sts bits.1646,r24
 116:main.c        ****         column = (column + 1) & 0x03;
 272               		.loc 1 116 0
 273 00c2 2091 0000 		lds r18,column.1645
 274 00c6 2F5F      		subi r18,lo8(-(1))
 275 00c8 2370      		andi r18,lo8(3)
 276 00ca 2093 0000 		sts column.1645,r18
 117:main.c        ****         first = column * 3;
 277               		.loc 1 117 0
 278 00ce 822F      		mov r24,r18
 279 00d0 63E0      		ldi r22,lo8(3)
 280 00d2 00D0      		rcall __mulqi3
 281 00d4 8093 0000 		sts first.1643,r24
 118:main.c        ****         colbit = 1<<column;
 282               		.loc 1 118 0
 283 00d8 41E0      		ldi r20,lo8(1)
 284 00da 50E0      		ldi r21,0
 285 00dc BA01      		movw r22,r20
 286 00de 00C0      		rjmp 2f
 287               		1:
 288 00e0 660F      		lsl r22
 289 00e2 771F      		rol r23
 290               		2:
 291 00e4 2A95      		dec r18
 292 00e6 02F4      		brpl 1b
 293 00e8 6093 0000 		sts colbit.1647,r22
 294               	.L18:
 119:main.c        ****     }
 120:main.c        ****     if (level[first] == ramp) bits = bits & 0x06;
 295               		.loc 1 120 0
 296 00ec 2091 0000 		lds r18,first.1643
 297 00f0 30E0      		ldi r19,0
 298 00f2 F901      		movw r30,r18
 299 00f4 E050      		subi r30,lo8(-(level))
 300 00f6 F040      		sbci r31,hi8(-(level))
 301 00f8 8081      		ld r24,Z
 302 00fa 9813      		cpse r25,r24
 303 00fc 00C0      		rjmp .L19
 304               		.loc 1 120 0 is_stmt 0 discriminator 1
 305 00fe 8091 0000 		lds r24,bits.1646
 306 0102 8670      		andi r24,lo8(6)
 307 0104 8093 0000 		sts bits.1646,r24
 308               	.L19:
 121:main.c        ****     if (level[first+1] == ramp) bits = bits & 0x05;
 309               		.loc 1 121 0 is_stmt 1
 310 0108 F901      		movw r30,r18
 311 010a E050      		subi r30,lo8(-(level+1))
 312 010c F040      		sbci r31,hi8(-(level+1))
 313 010e 8081      		ld r24,Z
 314 0110 9813      		cpse r25,r24
 315 0112 00C0      		rjmp .L20
 316               		.loc 1 121 0 is_stmt 0 discriminator 1
 317 0114 8091 0000 		lds r24,bits.1646
 318 0118 8570      		andi r24,lo8(5)
 319 011a 8093 0000 		sts bits.1646,r24
 320               	.L20:
 122:main.c        ****     if (level[first+2] == ramp) bits = bits & 0x03;
 321               		.loc 1 122 0 is_stmt 1
 322 011e F901      		movw r30,r18
 323 0120 E050      		subi r30,lo8(-(level+2))
 324 0122 F040      		sbci r31,hi8(-(level+2))
 325 0124 8081      		ld r24,Z
 326 0126 9813      		cpse r25,r24
 327 0128 00C0      		rjmp .L21
 328               		.loc 1 122 0 is_stmt 0 discriminator 1
 329 012a 8091 0000 		lds r24,bits.1646
 330 012e 8370      		andi r24,lo8(3)
 331 0130 8093 0000 		sts bits.1646,r24
 332               	.L21:
 123:main.c        ****     uint8_t mask = colbit - 1;
 333               		.loc 1 123 0 is_stmt 1
 334 0134 4091 0000 		lds r20,colbit.1647
 335 0138 6FEF      		ldi r22,lo8(-1)
 336 013a 640F      		add r22,r20
 337               	.LVL5:
 124:main.c        ****     uint8_t outputs = (bits & mask) | (bits & ~mask)<<1;
 338               		.loc 1 124 0
 339 013c 5091 0000 		lds r21,bits.1646
 340 0140 862F      		mov r24,r22
 341 0142 90E0      		ldi r25,0
 342 0144 8095      		com r24
 343 0146 9095      		com r25
 344 0148 252F      		mov r18,r21
 345 014a 30E0      		ldi r19,0
 346 014c 8223      		and r24,r18
 347 014e 9323      		and r25,r19
 348 0150 880F      		lsl r24
 349 0152 991F      		rol r25
 350 0154 5623      		and r21,r22
 351 0156 852B      		or r24,r21
 352               	.LVL6:
 125:main.c        ****     DDRB = (DDRB & 0xF0) | outputs | colbit;
 353               		.loc 1 125 0
 354 0158 97B3      		in r25,0x17
 355 015a 907F      		andi r25,lo8(-16)
 356 015c 492B      		or r20,r25
 357 015e 482B      		or r20,r24
 358 0160 47BB      		out 0x17,r20
 126:main.c        ****     PORTB = (PORTB & 0xF0) | outputs;
 359               		.loc 1 126 0
 360 0162 98B3      		in r25,0x18
 361 0164 907F      		andi r25,lo8(-16)
 362 0166 892B      		or r24,r25
 363               	.LVL7:
 364 0168 88BB      		out 0x18,r24
 127:main.c        ****     
 128:main.c        ****     cnt++;
 365               		.loc 1 128 0
 366 016a 8091 0000 		lds r24,cnt
 367 016e 8F5F      		subi r24,lo8(-(1))
 368 0170 8093 0000 		sts cnt,r24
 129:main.c        ****     if(cnt==speed){
 369               		.loc 1 129 0
 370 0174 9091 0000 		lds r25,cnt
 371 0178 8091 0000 		lds r24,speed
 372 017c 9813      		cpse r25,r24
 373 017e 00C0      		rjmp .L17
 130:main.c        ****         cnt=0;
 374               		.loc 1 130 0
 375 0180 1092 0000 		sts cnt,__zero_reg__
 131:main.c        ****     switch(blinkMode){
 376               		.loc 1 131 0
 377 0184 8091 0000 		lds r24,blinkMode
 378 0188 8130      		cpi r24,lo8(1)
 379 018a 01F4      		brne .+2
 380 018c 00C0      		rjmp .L24
 381 018e 00F4      		brsh .+2
 382 0190 00C0      		rjmp .L25
 383 0192 8230      		cpi r24,lo8(2)
 384 0194 01F0      		breq .+2
 385 0196 00C0      		rjmp .L17
 132:main.c        ****         
 133:main.c        ****         case SCROLL:
 134:main.c        ****             if(pstate&(1<<DIR_FLAG)){
 386               		.loc 1 134 0
 387 0198 8091 0000 		lds r24,pstate
 135:main.c        ****                 level[order[index]]=brightness++;
 388               		.loc 1 135 0
 389 019c E091 0000 		lds r30,index
 390 01a0 F0E0      		ldi r31,0
 391 01a2 E050      		subi r30,lo8(-(order))
 392 01a4 F040      		sbci r31,hi8(-(order))
 393 01a6 E081      		ld r30,Z
 394 01a8 F0E0      		ldi r31,0
 134:main.c        ****                 level[order[index]]=brightness++;
 395               		.loc 1 134 0
 396 01aa 82FF      		sbrs r24,2
 397 01ac 00C0      		rjmp .L27
 398               		.loc 1 135 0
 399 01ae 8091 0000 		lds r24,brightness
 400 01b2 91E0      		ldi r25,lo8(1)
 401 01b4 980F      		add r25,r24
 402 01b6 9093 0000 		sts brightness,r25
 403 01ba E050      		subi r30,lo8(-(level))
 404 01bc F040      		sbci r31,hi8(-(level))
 405 01be 8083      		st Z,r24
 136:main.c        ****                 if(brightness>7){
 406               		.loc 1 136 0
 407 01c0 8091 0000 		lds r24,brightness
 408 01c4 8830      		cpi r24,lo8(8)
 409 01c6 00F4      		brsh .+2
 410 01c8 00C0      		rjmp .L17
 137:main.c        ****                     brightness=0;
 411               		.loc 1 137 0
 412 01ca 1092 0000 		sts brightness,__zero_reg__
 138:main.c        ****                     index++;
 413               		.loc 1 138 0
 414 01ce 8091 0000 		lds r24,index
 415 01d2 8F5F      		subi r24,lo8(-(1))
 416 01d4 8093 0000 		sts index,r24
 139:main.c        ****                     if(index>11){
 417               		.loc 1 139 0
 418 01d8 8091 0000 		lds r24,index
 419 01dc 8C30      		cpi r24,lo8(12)
 420 01de 00F4      		brsh .+2
 421 01e0 00C0      		rjmp .L17
 140:main.c        ****                         index=11;
 422               		.loc 1 140 0
 423 01e2 8BE0      		ldi r24,lo8(11)
 424 01e4 8093 0000 		sts index,r24
 141:main.c        ****                         brightness=7;
 425               		.loc 1 141 0
 426 01e8 87E0      		ldi r24,lo8(7)
 427 01ea 8093 0000 		sts brightness,r24
 142:main.c        ****                         pstate&=~(1<<DIR_FLAG);
 428               		.loc 1 142 0
 429 01ee 8091 0000 		lds r24,pstate
 430 01f2 8B7F      		andi r24,lo8(-5)
 431 01f4 00C0      		rjmp .L32
 432               	.L27:
 143:main.c        ****                     }
 144:main.c        ****                 }
 145:main.c        ****             }else{
 146:main.c        ****                 level[order[index]]=brightness--;
 433               		.loc 1 146 0
 434 01f6 8091 0000 		lds r24,brightness
 435 01fa 9FEF      		ldi r25,lo8(-1)
 436 01fc 980F      		add r25,r24
 437 01fe 9093 0000 		sts brightness,r25
 438 0202 E050      		subi r30,lo8(-(level))
 439 0204 F040      		sbci r31,hi8(-(level))
 440 0206 8083      		st Z,r24
 147:main.c        ****                 if(brightness==0){
 441               		.loc 1 147 0
 442 0208 8091 0000 		lds r24,brightness
 443 020c 8111      		cpse r24,__zero_reg__
 444 020e 00C0      		rjmp .L17
 148:main.c        ****                     brightness=7;
 445               		.loc 1 148 0
 446 0210 87E0      		ldi r24,lo8(7)
 447 0212 8093 0000 		sts brightness,r24
 149:main.c        ****                     index--;
 448               		.loc 1 149 0
 449 0216 8091 0000 		lds r24,index
 450 021a 8150      		subi r24,lo8(-(-1))
 451 021c 8093 0000 		sts index,r24
 150:main.c        ****                     if(index==0){
 452               		.loc 1 150 0
 453 0220 8091 0000 		lds r24,index
 454 0224 8111      		cpse r24,__zero_reg__
 455 0226 00C0      		rjmp .L17
 151:main.c        ****                         index=0;
 456               		.loc 1 151 0
 457 0228 1092 0000 		sts index,__zero_reg__
 152:main.c        ****                         brightness=0;
 458               		.loc 1 152 0
 459 022c 1092 0000 		sts brightness,__zero_reg__
 153:main.c        ****                         pstate|=(1<<DIR_FLAG);
 460               		.loc 1 153 0
 461 0230 8091 0000 		lds r24,pstate
 462 0234 8460      		ori r24,lo8(4)
 463               	.L32:
 464 0236 8093 0000 		sts pstate,r24
 465 023a 00C0      		rjmp .L17
 466               	.L25:
 154:main.c        ****                     }
 155:main.c        ****                 }
 156:main.c        ****             }
 157:main.c        ****             break;
 158:main.c        ****             
 159:main.c        ****         case ALL:
 160:main.c        ****             level[order[index]]=brightness;
 467               		.loc 1 160 0
 468 023c E091 0000 		lds r30,index
 469 0240 F0E0      		ldi r31,0
 470 0242 E050      		subi r30,lo8(-(order))
 471 0244 F040      		sbci r31,hi8(-(order))
 472 0246 E081      		ld r30,Z
 473 0248 F0E0      		ldi r31,0
 474 024a 8091 0000 		lds r24,brightness
 475 024e E050      		subi r30,lo8(-(level))
 476 0250 F040      		sbci r31,hi8(-(level))
 477 0252 8083      		st Z,r24
 161:main.c        ****             brightness=(brightness+1)&0x07;
 478               		.loc 1 161 0
 479 0254 8091 0000 		lds r24,brightness
 480 0258 8F5F      		subi r24,lo8(-(1))
 481 025a 8770      		andi r24,lo8(7)
 482 025c 8093 0000 		sts brightness,r24
 162:main.c        ****             if(brightness==0){
 483               		.loc 1 162 0
 484 0260 8091 0000 		lds r24,brightness
 485 0264 8823      		tst r24
 486 0266 01F0      		breq .L35
 487 0268 00C0      		rjmp .L17
 488               	.L24:
 163:main.c        ****                 //level[order[index]]=0;
 164:main.c        ****                 index++;
 165:main.c        ****                 if(index>11)index=0;
 166:main.c        ****             }
 167:main.c        ****             break;
 168:main.c        ****             
 169:main.c        ****         case PIXIE:
 170:main.c        ****             switch(++brightness){
 489               		.loc 1 170 0
 490 026a 8091 0000 		lds r24,brightness
 491 026e 8F5F      		subi r24,lo8(-(1))
 492 0270 8093 0000 		sts brightness,r24
 493 0274 8230      		cpi r24,lo8(2)
 494 0276 01F0      		breq .L29
 495 0278 8A30      		cpi r24,lo8(10)
 496 027a 01F0      		breq .L30
 497 027c 8130      		cpi r24,lo8(1)
 498 027e 01F4      		brne .L17
 171:main.c        ****                 case 1:
 172:main.c        ****                     level[index]=7;
 499               		.loc 1 172 0
 500 0280 E091 0000 		lds r30,index
 501 0284 F0E0      		ldi r31,0
 502 0286 E050      		subi r30,lo8(-(level))
 503 0288 F040      		sbci r31,hi8(-(level))
 504 028a 87E0      		ldi r24,lo8(7)
 505 028c 8083      		st Z,r24
 173:main.c        ****                 break;
 506               		.loc 1 173 0
 507 028e 00C0      		rjmp .L17
 508               	.L29:
 174:main.c        ****                 case 2:
 175:main.c        ****                     level[index]=0;
 509               		.loc 1 175 0
 510 0290 E091 0000 		lds r30,index
 511 0294 F0E0      		ldi r31,0
 512 0296 E050      		subi r30,lo8(-(level))
 513 0298 F040      		sbci r31,hi8(-(level))
 514 029a 1082      		st Z,__zero_reg__
 176:main.c        ****                 break;
 515               		.loc 1 176 0
 516 029c 00C0      		rjmp .L17
 517               	.L30:
 177:main.c        ****                 case 10:
 178:main.c        ****                     brightness=0;
 518               		.loc 1 178 0
 519 029e 1092 0000 		sts brightness,__zero_reg__
 520               	.L35:
 179:main.c        ****                     index++;
 521               		.loc 1 179 0
 522 02a2 8091 0000 		lds r24,index
 523 02a6 8F5F      		subi r24,lo8(-(1))
 524 02a8 8093 0000 		sts index,r24
 180:main.c        ****                     if(index>11)index=0;
 525               		.loc 1 180 0
 526 02ac 8091 0000 		lds r24,index
 527 02b0 8C30      		cpi r24,lo8(12)
 528 02b2 00F0      		brlo .L17
 529               		.loc 1 180 0 is_stmt 0 discriminator 1
 530 02b4 1092 0000 		sts index,__zero_reg__
 531               	.L17:
 532               	/* epilogue start */
 181:main.c        ****             }
 182:main.c        **** 
 183:main.c        ****         case DEBUG:
 184:main.c        ****             break;
 185:main.c        ****         default:
 186:main.c        ****             break;
 187:main.c        ****         }
 188:main.c        ****     }
 189:main.c        **** }
 533               		.loc 1 189 0 is_stmt 1
 534 02b8 FF91      		pop r31
 535 02ba EF91      		pop r30
 536 02bc 9F91      		pop r25
 537 02be 8F91      		pop r24
 538 02c0 7F91      		pop r23
 539 02c2 6F91      		pop r22
 540               	.LVL8:
 541 02c4 5F91      		pop r21
 542 02c6 4F91      		pop r20
 543 02c8 3F91      		pop r19
 544 02ca 2F91      		pop r18
 545 02cc 0F90      		pop r0
 546 02ce 0FBE      		out __SREG__,r0
 547 02d0 0F90      		pop r0
 548 02d2 1F90      		pop r1
 549 02d4 1895      		reti
 550               		.cfi_endproc
 551               	.LFE11:
 553               		.local	colbit.1647
 554               		.comm	colbit.1647,1,1
 555               		.local	first.1643
 556               		.comm	first.1643,1,1
 557               		.local	column.1645
 558               		.comm	column.1645,1,1
 559               		.local	bits.1646
 560               		.comm	bits.1646,1,1
 561               		.local	ramp.1644
 562               		.comm	ramp.1644,1,1
 563               	.global	index
 564               		.data
 567               	index:
 568 0000 01        		.byte	1
 569               	.global	speed
 572               	speed:
 573 0001 0F        		.byte	15
 574               	.global	brightness
 577               	brightness:
 578 0002 05        		.byte	5
 579               	.global	pstate
 580               		.section .bss
 583               	pstate:
 584 0000 00        		.zero	1
 585               	.global	blinkMode
 588               	blinkMode:
 589 0001 00        		.zero	1
 590               	.global	order
 591               		.section	.rodata
 594               	order:
 595 0000 03        		.byte	3
 596 0001 08        		.byte	8
 597 0002 02        		.byte	2
 598 0003 07        		.byte	7
 599 0004 09        		.byte	9
 600 0005 04        		.byte	4
 601 0006 05        		.byte	5
 602 0007 01        		.byte	1
 603 0008 00        		.byte	0
 604 0009 06        		.byte	6
 605 000a 0B        		.byte	11
 606 000b 0A        		.byte	10
 607               		.comm	level,12,1
 608               	.global	cnt
 609               		.data
 612               	cnt:
 613 0003 01        		.byte	1
 614               		.text
 615               	.Letext0:
 616               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLuFgoY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccLuFgoY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccLuFgoY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccLuFgoY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccLuFgoY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccLuFgoY.s:13     .text.startup:0000000000000000 main
     /tmp/ccLuFgoY.s:87     .text:0000000000000000 __vector_2
     /tmp/ccLuFgoY.s:583    .bss:0000000000000000 pstate
     /tmp/ccLuFgoY.s:588    .bss:0000000000000001 blinkMode
     /tmp/ccLuFgoY.s:577    .data:0000000000000002 brightness
     /tmp/ccLuFgoY.s:567    .data:0000000000000000 index
                            *COM*:000000000000000c level
     /tmp/ccLuFgoY.s:202    .text:000000000000008e __vector_3
     /tmp/ccLuFgoY.s:560    .bss:0000000000000006 ramp.1644
     /tmp/ccLuFgoY.s:558    .bss:0000000000000005 bits.1646
     /tmp/ccLuFgoY.s:556    .bss:0000000000000004 column.1645
     /tmp/ccLuFgoY.s:554    .bss:0000000000000003 first.1643
                             .bss:0000000000000002 colbit.1647
     /tmp/ccLuFgoY.s:612    .data:0000000000000003 cnt
     /tmp/ccLuFgoY.s:572    .data:0000000000000001 speed
     /tmp/ccLuFgoY.s:594    .rodata:0000000000000000 order

UNDEFINED SYMBOLS
__mulqi3
__do_copy_data
__do_clear_bss
